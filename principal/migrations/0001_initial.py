# Generated by Django 5.2.1 on 2025-06-25 06:29

import django.core.validators
import django.db.models.deletion
import principal.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Administrador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=60)),
                ('apellido', models.CharField(max_length=60)),
                ('correo', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=128)),
            ],
            options={
                'verbose_name': 'Administrador',
                'verbose_name_plural': 'Administradores',
                'db_table': 'administrador',
            },
        ),
        migrations.CreateModel(
            name='Clase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monto', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('duracion', models.FloatField(help_text='Duración en horas')),
            ],
            options={
                'verbose_name': 'Clase',
                'verbose_name_plural': 'Clases',
                'db_table': 'clase',
            },
        ),
        migrations.CreateModel(
            name='Materia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_materia', models.CharField(max_length=70, unique=True)),
            ],
            options={
                'db_table': 'materia',
            },
        ),
        migrations.CreateModel(
            name='Nivel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_nivel', models.CharField(max_length=45, unique=True)),
            ],
            options={
                'db_table': 'nivel',
            },
        ),
        migrations.CreateModel(
            name='Pago',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_pago', models.DateTimeField(auto_now_add=True)),
                ('monto', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('metodo_pago', models.CharField(choices=[('EFECTIVO', 'Efectivo'), ('TRANSFERENCIA', 'Transferencia'), ('TARJETA', 'Tarjeta'), ('PAYPAL', 'PayPal')], max_length=13)),
                ('estado', models.CharField(choices=[('PENDIENTE', 'Pendiente'), ('COMPLETADO', 'Completado'), ('RECHAZADO', 'Rechazado')], default='PENDIENTE', max_length=10)),
            ],
            options={
                'db_table': 'pago',
            },
        ),
        migrations.CreateModel(
            name='Alumno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50)),
                ('apellido', models.CharField(max_length=50)),
                ('rut', models.IntegerField(unique=True)),
                ('dv', models.CharField(max_length=1)),
                ('correo', models.EmailField(max_length=45, unique=True)),
                ('password', models.CharField(max_length=128, verbose_name='Contraseña')),
                ('activo', models.BooleanField(default=True, help_text='Indica si la cuenta está habilitada')),
            ],
            options={
                'verbose_name': 'Alumno',
                'verbose_name_plural': 'Alumnos',
                'db_table': 'alumno',
                'indexes': [models.Index(fields=['rut'], name='idx_rut')],
            },
        ),
        migrations.CreateModel(
            name='HoraClase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField()),
                ('inicio', models.DateTimeField()),
                ('fin', models.DateTimeField()),
                ('clase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='principal.clase')),
            ],
            options={
                'verbose_name': 'Horario de Clase',
                'verbose_name_plural': 'Horarios de Clases',
                'db_table': 'hora_clase',
            },
        ),
        migrations.AddField(
            model_name='clase',
            name='materia',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='principal.materia'),
        ),
        migrations.AddField(
            model_name='clase',
            name='nivel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='principal.nivel'),
        ),
        migrations.CreateModel(
            name='Profesor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=60)),
                ('apellido', models.CharField(max_length=60)),
                ('rut', models.IntegerField(unique=True)),
                ('dv', models.CharField(max_length=1)),
                ('email', models.EmailField(max_length=45, unique=True)),
                ('password', models.CharField(max_length=128, verbose_name='Contraseña')),
                ('titulo', models.FileField(blank=True, null=True, upload_to=principal.models.profesor_titulo_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf']), principal.models.validate_pdf], verbose_name='Título PDF')),
                ('validado', models.BooleanField(default=False, help_text='Indica si el título fue validado por el administrador')),
                ('activo', models.BooleanField(default=True, help_text='Indica si puede ingresar al sistema')),
            ],
            options={
                'verbose_name': 'Profesor',
                'verbose_name_plural': 'Profesores',
                'db_table': 'profesor',
                'indexes': [models.Index(fields=['rut'], name='idx_profesor_rut')],
            },
        ),
        migrations.AddField(
            model_name='clase',
            name='profesor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='principal.profesor'),
        ),
        migrations.CreateModel(
            name='ProfesorMateria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('materia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='principal.materia')),
                ('profesor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='principal.profesor')),
            ],
            options={
                'verbose_name': 'Profesor-Materia',
                'verbose_name_plural': 'Profesores-Materias',
            },
        ),
        migrations.CreateModel(
            name='ReservaClase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mensaje_alumno', models.TextField(blank=True, null=True)),
                ('alumno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='principal.alumno')),
                ('hora_clase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='principal.horaclase')),
                ('pago', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='principal.pago')),
            ],
            options={
                'verbose_name': 'Reserva de Clase',
                'verbose_name_plural': 'Reservas de Clases',
                'db_table': 'reserva_clase',
            },
        ),
        migrations.CreateModel(
            name='MaterialClase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archivo', models.FileField(blank=True, null=True, upload_to='materiales/')),
                ('link', models.URLField(blank=True, null=True)),
                ('descripcion', models.TextField(blank=True)),
                ('fecha_subida', models.DateTimeField(auto_now_add=True)),
                ('reserva', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='materiales', to='principal.reservaclase')),
            ],
            options={
                'db_table': 'material_clase',
            },
        ),
        migrations.CreateModel(
            name='EvaluacionClase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evaluador', models.CharField(choices=[('alumno', 'Alumno'), ('profesor', 'Profesor')], default='alumno', max_length=10)),
                ('puntuacion', models.IntegerField()),
                ('comentario', models.TextField(blank=True)),
                ('fecha', models.DateTimeField(auto_now_add=True)),
                ('reserva', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='principal.reservaclase')),
            ],
            options={
                'db_table': 'evaluacion_clase',
            },
        ),
        migrations.AddIndex(
            model_name='horaclase',
            index=models.Index(fields=['fecha', 'inicio'], name='idx_fecha_inicio'),
        ),
        migrations.AddIndex(
            model_name='clase',
            index=models.Index(fields=['profesor'], name='idx_clase_profesor'),
        ),
        migrations.AlterUniqueTogether(
            name='profesormateria',
            unique_together={('profesor', 'materia')},
        ),
        migrations.AddIndex(
            model_name='reservaclase',
            index=models.Index(fields=['alumno'], name='idx_reserva_alumno'),
        ),
        migrations.AlterUniqueTogether(
            name='reservaclase',
            unique_together={('hora_clase', 'alumno')},
        ),
        migrations.AlterUniqueTogether(
            name='evaluacionclase',
            unique_together={('reserva', 'evaluador')},
        ),
    ]
